// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tp7.Models;

#nullable disable

namespace tp7.Migrations
{
    [DbContext(typeof(AssurancesContext))]
    [Migration("20230119134419_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tp7.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("adresse");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prenom");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ville");

                    b.HasKey("Id")
                        .HasName("PK__Client__3214EC275D270E57");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("tp7.Models.Contrat", b =>
                {
                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("num");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num"));

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("date")
                        .HasColumnName("dateEcheance");

                    b.Property<DateTime>("DateSouscription")
                        .HasColumnType("date");

                    b.Property<int?>("IdClient")
                        .HasColumnType("int");

                    b.Property<int?>("NumFor")
                        .HasColumnType("int")
                        .HasColumnName("numFor");

                    b.HasKey("Num")
                        .HasName("PK__Contrat__DF908D65FD4144F5");

                    b.HasIndex("IdClient");

                    b.HasIndex("NumFor");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("tp7.Models.Correspondant", b =>
                {
                    b.Property<int>("IdCorrespondant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCorrespondant");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCorrespondant"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telephone");

                    b.HasKey("IdCorrespondant")
                        .HasName("PK__Correspo__C3096999DD9A37CD");

                    b.ToTable("Correspondants");
                });

            modelBuilder.Entity("tp7.Models.DossiersSinistre", b =>
                {
                    b.Property<int>("CodeDossier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codeDossier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeDossier"));

                    b.Property<DateTime>("DateCloture")
                        .HasColumnType("date")
                        .HasColumnName("dateCloture");

                    b.Property<DateTime>("DateOuverture")
                        .HasColumnType("date");

                    b.Property<int?>("IdExpert")
                        .HasColumnType("int")
                        .HasColumnName("idExpert");

                    b.Property<int?>("Idcorrespondant")
                        .HasColumnType("int")
                        .HasColumnName("idcorrespondant");

                    b.Property<string>("Indemnite")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("indemnite");

                    b.Property<int?>("NumContrat")
                        .HasColumnType("int")
                        .HasColumnName("numContrat");

                    b.HasKey("CodeDossier")
                        .HasName("PK__DossierS__EE64F91AA6BD35FE");

                    b.HasIndex("IdExpert");

                    b.HasIndex("Idcorrespondant");

                    b.HasIndex("NumContrat");

                    b.ToTable("DossiersSinistres");
                });

            modelBuilder.Entity("tp7.Models.Expert", b =>
                {
                    b.Property<int>("IdExpert")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idExpert");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExpert"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telephone");

                    b.HasKey("IdExpert")
                        .HasName("PK__Expert__EC4036BA8A5685A0");

                    b.ToTable("Experts");
                });

            modelBuilder.Entity("tp7.Models.Formule", b =>
                {
                    b.Property<int>("CodeFormule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codeFormule");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeFormule"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("libelle");

                    b.HasKey("CodeFormule")
                        .HasName("PK__Formule__7994DFCB99597E75");

                    b.ToTable("Formules");
                });

            modelBuilder.Entity("tp7.Models.Garanty", b =>
                {
                    b.Property<int>("CodeGarantie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codeGarantie");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeGarantie"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("libelle");

                    b.HasKey("CodeGarantie")
                        .HasName("PK__Garantie__543EEB909D06398C");

                    b.ToTable("Garanties");
                });

            modelBuilder.Entity("tp7.Models.Intervention", b =>
                {
                    b.Property<int>("CodeIntervention")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codeIntervention");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeIntervention"));

                    b.Property<int>("CodeDos")
                        .HasColumnType("int")
                        .HasColumnName("codeDos");

                    b.Property<DateTime>("DateIntervention")
                        .HasColumnType("date")
                        .HasColumnName("dateIntervention");

                    b.HasKey("CodeIntervention")
                        .HasName("PK__Interven__502D49DC1FF1B39A");

                    b.HasIndex("CodeDos");

                    b.ToTable("Interventions");
                });

            modelBuilder.Entity("tp7.Models.Prevision", b =>
                {
                    b.Property<int>("CodeProvision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codeProvision");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeProvision"));

                    b.Property<int>("CodeFor")
                        .HasColumnType("int")
                        .HasColumnName("codeFor");

                    b.Property<int>("CodeGar")
                        .HasColumnType("int")
                        .HasColumnName("codeGar");

                    b.Property<string>("PlafondFranchie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("plafondFranchie");

                    b.HasKey("CodeProvision")
                        .HasName("PK__Prevoir__307E50CC2E16A2CC");

                    b.HasIndex("CodeFor");

                    b.HasIndex("CodeGar");

                    b.ToTable("Previsions");
                });

            modelBuilder.Entity("tp7.Models.Contrat", b =>
                {
                    b.HasOne("tp7.Models.Client", "IdClientNavigation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdClient")
                        .HasConstraintName("fk_Contrat");

                    b.HasOne("tp7.Models.Formule", "NumForNavigation")
                        .WithMany("Contrats")
                        .HasForeignKey("NumFor")
                        .HasConstraintName("fk_contrat2");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("NumForNavigation");
                });

            modelBuilder.Entity("tp7.Models.DossiersSinistre", b =>
                {
                    b.HasOne("tp7.Models.Expert", "IdExpertNavigation")
                        .WithMany("DossiersSinistres")
                        .HasForeignKey("IdExpert")
                        .HasConstraintName("fk_expert");

                    b.HasOne("tp7.Models.Correspondant", "IdcorrespondantNavigation")
                        .WithMany("DossiersSinistres")
                        .HasForeignKey("Idcorrespondant")
                        .HasConstraintName("fk_correspondant");

                    b.HasOne("tp7.Models.Contrat", "NumContratNavigation")
                        .WithMany("DossiersSinistres")
                        .HasForeignKey("NumContrat")
                        .HasConstraintName("fk_dossinistre");

                    b.Navigation("IdExpertNavigation");

                    b.Navigation("IdcorrespondantNavigation");

                    b.Navigation("NumContratNavigation");
                });

            modelBuilder.Entity("tp7.Models.Intervention", b =>
                {
                    b.HasOne("tp7.Models.DossiersSinistre", "CodeDosNavigation")
                        .WithMany("Interventions")
                        .HasForeignKey("CodeDos")
                        .IsRequired()
                        .HasConstraintName("fk_Intervention");

                    b.Navigation("CodeDosNavigation");
                });

            modelBuilder.Entity("tp7.Models.Prevision", b =>
                {
                    b.HasOne("tp7.Models.Formule", "CodeForNavigation")
                        .WithMany("Previsions")
                        .HasForeignKey("CodeFor")
                        .IsRequired()
                        .HasConstraintName("fk_Prevoir");

                    b.HasOne("tp7.Models.Garanty", "CodeGarNavigation")
                        .WithMany("Previsions")
                        .HasForeignKey("CodeGar")
                        .IsRequired()
                        .HasConstraintName("fk_Prevoir2");

                    b.Navigation("CodeForNavigation");

                    b.Navigation("CodeGarNavigation");
                });

            modelBuilder.Entity("tp7.Models.Client", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("tp7.Models.Contrat", b =>
                {
                    b.Navigation("DossiersSinistres");
                });

            modelBuilder.Entity("tp7.Models.Correspondant", b =>
                {
                    b.Navigation("DossiersSinistres");
                });

            modelBuilder.Entity("tp7.Models.DossiersSinistre", b =>
                {
                    b.Navigation("Interventions");
                });

            modelBuilder.Entity("tp7.Models.Expert", b =>
                {
                    b.Navigation("DossiersSinistres");
                });

            modelBuilder.Entity("tp7.Models.Formule", b =>
                {
                    b.Navigation("Contrats");

                    b.Navigation("Previsions");
                });

            modelBuilder.Entity("tp7.Models.Garanty", b =>
                {
                    b.Navigation("Previsions");
                });
#pragma warning restore 612, 618
        }
    }
}
